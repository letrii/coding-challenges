version: "3.8"

services:
  quiz-service:
    build: .
    volumes:
      - ./:/app
    ports:
      - "${QUIZ_SERVICE_PORT}:8000"
    environment:
      - APP_NAME=${APP_NAME}
      - DEBUG=${DEBUG}
      - MONGODB_USERNAME=${MONGODB_USERNAME}
      - MONGODB_PASSWORD=${MONGODB_PASSWORD}
      - MONGODB_HOST=mongodb
      - MONGODB_PORT=${MONGODB_PORT}
      - MONGODB_DB=${MONGODB_DB}
      - REDIS_URL=${REDIS_URL}
      - JWT_SECRET=${JWT_SECRET}
      - PYTHONUNBUFFERED=1
    depends_on:
      mongodb:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - quiz-network
    command: >
      sh -c "
        echo 'Waiting for MongoDB to be ready...' &&
        until nc -z mongodb 27017; do
          echo 'Waiting for MongoDB...' &&
          sleep 1;
        done &&
        echo 'MongoDB is ready!' &&
        uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload --ws-ping-interval 20 --ws-ping-timeout 20
      "
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  mongodb:
    image: mongo:latest
    ports:
      - "${MONGODB_PORT}:27017"
    volumes:
      - mongodb_data:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGODB_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGODB_PASSWORD}
      - MONGO_INITDB_DATABASE=${MONGODB_DB}
    networks:
      - quiz-network
    command: ["mongod", "--quiet", "--logpath", "/dev/null"]
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 40s
    restart: unless-stopped

  redis:
    image: redis:latest
    ports:
      - "${REDIS_PORT}:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes ${REDIS_PASSWORD:+--requirepass ${REDIS_PASSWORD}}
    networks:
      - quiz-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

networks:
  quiz-network:
    name: quiz-network
    driver: bridge

volumes:
  mongodb_data:
    name: quiz_service_mongodb_data
  redis_data:
    name: quiz_service_redis_data
